class Node{
    int x, y;
    Node(int x, int y){
        this.x = x;
        this.y = y;
    }
}
class Solution {
    public int[][] multiply(int[][] A, int[][] B) {
        int[][] result = new int[A.length][B[0].length];
        List<Node> listA = new ArrayList<>();
        List<Node> listB = new ArrayList<>();
        for(int i = 0; i<A.length; i++){
            for(int j = 0; j< A[0].length; j++){
                if(A[i][j] != 0) 
                    listA.add(new Node(i,j));
            }
        }
        for(int i = 0; i<B.length; i++){
            for(int j = 0; j< B[0].length; j++){
                if(B[i][j] != 0) 
                    listB.add(new Node(i,j));
            }
        }
        
        for(Node nodeA: listA){
            for(Node nodeB : listB){
                if(nodeA.y == nodeB.x){
                    result[nodeA.x][nodeB.y] += A[nodeA.x][nodeA.y] * B[nodeB.x][nodeB.y];
                }
            }
        }
        return result;
        
    }
}

 public int[][] multiply(int[][] A, int[][] B) {
        int rowsA = A.length, colsA = A[0].length, colsB = B[0].length;
        int[][] result = new int[rowsA][colsB];
        for (int xA = 0; xA < rowsA; xA++) {
            for (int yA = 0; yA < colsA; yA++) {
                if (A[xA][yA] != 0) {
                    for (int yB = 0; yB < colsB; yB++) {
                        result[xA][yB] += A[xA][yA] * B[yA][yB];
                    }
                }
            }
        }
        return result;
    }
