class Solution {
    public List<String> findAndReplacePattern(String[] words, String pattern) {
        List<String> ans = new ArrayList<>();
        for(String word: words){
            if(match(word, pattern)){
                ans.add(word);
            }
        }
        return ans;
        
    }
    
    public boolean match(String word, String pattern){
       Map<Character, Character> m1 = new HashMap<>();
        for(int i=0; i<word.length(); i++){
            char w = word.charAt(i);
            char p = pattern.charAt(i);
            if(!m1.containsKey(w)) m1.put(w,p);
            if(m1.get(w) != p) return false;
        }
        boolean [] seen = new boolean[26];
        for(char p: m1.values()){
        if(seen[p-'a']){
            return false;
        }
            seen[p-'a'] = true;
        }
        return true;
    }
}
