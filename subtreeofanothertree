 
class Solution {
    public boolean isSubtree(TreeNode s, TreeNode t) {
        return traverse(s,t);
    }
    public boolean traverse(TreeNode s, TreeNode t){
        return s!=null && (equals(s,t) || traverse(s.left,t) ||traverse(s.right,t));
    }
    public boolean equals(TreeNode x, TreeNode y){
        if(x==null && y==null) return true;
        if(y==null || x==null) return false;
        return x.val==y.val && equals(x.left, y.left) && equals(x.right, y.right);
    }
}
O(m*n) Time complexity
Space Complexity O(n) 
