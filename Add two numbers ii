class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
          Stack<Integer> s1 = new Stack<>();
        Stack<Integer> s2 = new Stack<>();
        
        while(l1 != null){
            s1.push(l1.val);
            l1 = l1.next;
        }
        while(l2 != null){
            s2.push(l2.val);
            l2=l2.next;
        }
        int sum = 0;
       ListNode dummy = new ListNode(0);
        while(!s1.isEmpty() || !s2.isEmpty() || sum != 0){
            if(!s1.isEmpty()){
                sum+= s1.pop();
            }
            if(!s2.isEmpty()){
                sum+= s2.pop();
            }
            
            ListNode node = new ListNode(sum % 10);
            if(dummy.next == null){
                dummy.next = node;
            }else{
                node.next = dummy.next;
                dummy.next = node;
            }
            sum /=10;
        }
        return dummy.next;
    }
}

