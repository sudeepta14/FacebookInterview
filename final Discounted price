import java.util.*;
import java.io.*;
public class Splitting_Pixels{
    public static void main(String[] args){
      int[] arr = {5,4,5,1,3,3,8,2};
      findContinuousNextLowest(arr);
    }
    public static void findContinuousNextLowest(int prices []) {
    int sum = 0;
    int[] result = new int[prices.length];
	Stack<Integer> stack = new Stack<>();
	//going from right to left
	for(int i=prices.length-1; i>=0; --i) {
		// remove all elements from stack made irrelevant by A[i]
		while(!stack.isEmpty() && stack.peek() > prices[i]) 
			stack.pop();
		//now the top of the stack is the result for index i
		if(!stack.isEmpty())
			result[i] = stack.peek();
		//push the new element on the stack. The stack will still contain all relevant
                    //elements in decreasing order from top to bottom
		stack.push(prices[i]);
	}
	for(int i=0; i<prices.length;i++){
	    prices[i] = prices[i]-result[i];
	}
	for(int x: prices){
	    sum +=x;
	}
	System.out.println(sum);
	for(int i=0; i<result.length; i++){
	    if(result[i]==0){
	        System.out.print(i);
	    }
	}
}
}

Time Complexity : O(n)
