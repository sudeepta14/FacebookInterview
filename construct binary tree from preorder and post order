class Solution {
    HashMap<Integer,Integer> inorderMap;
    int[] inorder;
    int[] preorder;
    int preIndex=0;
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        this.preorder = preorder;
        this.inorder = inorder;
        inorderMap = new HashMap();
        for (int i=0;i<inorder.length;i++) {
            inorderMap.put(inorder[i],i);
        }
        return helper(0,inorder.length-1);
    }
    
    public TreeNode helper(int st, int en) {
        if (st > en) return null;
        TreeNode root = new TreeNode(preorder[preIndex++]);
        int rootIndex = inorderMap.get(root.val);
        root.left = helper(st,rootIndex-1);
        root.right = helper(rootIndex+1,en);
        return root;
    }
}

Time Complexity : O(nlogn)
Space Complexity: O(n)
