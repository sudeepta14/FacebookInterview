class RandomizedSet {
    ArrayList<Integer> nums;
    HashMap<Integer,Integer> locs;
    java.util.Random rand = new java.util.Random();
    
    /** Initialize your data structure here. */
    public RandomizedSet() {
        this.locs = new HashMap<Integer, Integer>();
        this.nums = new ArrayList<Integer>();
    }
    
    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
    public boolean insert(int val) {
       if(locs.containsKey(val)){
           return false;
       }
        locs.put(val, nums.size());
        nums.add(val);
        return true;
    }
    
    /** Removes a value from the set. Returns true if the set contained the specified element. */
    public boolean remove(int val) {
        if(!locs.containsKey(val)){
            return false;
        }
        int index = locs.get(val);
        // If it is not the last index, swap the last value with that of the current location. 
        if(index < nums.size()-1){
            int lastIndexValue = nums.get(nums.size()-1);
            nums.set(index,lastIndexValue);
            locs.put(lastIndexValue, index);
        }
        locs.remove(val);
        nums.remove(nums.size()-1);
        return true;
    }
    
    /** Get a random element from the set. */
    public int getRandom() {
       return nums.get(rand.nextInt(nums.size()));
    }
}

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet obj = new RandomizedSet();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */
 
 O(1) Time Complexity
