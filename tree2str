class Solution {
    public String tree2str(TreeNode t) {
        if(t == null){
            return "";
        }
        Stack<TreeNode> stack = new Stack<>();
        stack.push(t);
        Set<TreeNode> visited = new HashSet<>();
        StringBuilder sb = new StringBuilder();
        while(!stack.isEmpty()){
            t = stack.peek();
            if(visited.contains(t)){
                stack.pop();
                sb.append(")");
            }else{
                visited.add(t);
                sb.append("("+t.val);
                if(t.left == null && t.right!=null){
                    sb.append("()");
                }
                if(t.right != null){
                    stack.push(t.right);
                }
                if(t.left != null){
                    stack.push(t.left);
                }
            }
        }
        return sb.substring(1, sb.length()-1);
    }
}

class Solution {
    public String tree2str(TreeNode t) {
        if(t == null){
            return "";
        }            
        if(t.left == null && t.right == null){
            return t.val + "";
        }
        if(t.right == null){
            return t.val + "(" + tree2str(t.left)+")";
        }
        return t.val + "(" + tree2str(t.left) + ")(" + tree2str(t.right) + ")";
    }
}
