class Solution {
    public int[] sortTransformedArray(int[] nums, int a, int b, int c) {
        int n = nums.length;
        int [] sorted = new int[n];
        int i =0, j= n-1;
        
        // If  the the a is negative start from the 0 index else from the last index
        
        int index = a>=0? n-1:0;
        
        while(i<=j){
            if(a>=0){
                // if the first value is greater than second value --- since is it last index -- store the value in the last hence i++ is first it will be descending order 
                sorted[index--] = quad(nums[i], a, b, c) >= quad(nums[j], a, b, c) ? quad(nums[i++],a,b,c): quad(nums[j--],a,b,c);
            }
            else{
                // if the first value is greater than second value --- since is it first index -- store the value in the last hence i++ is first it will be ascending order 
                sorted[index++] = quad(nums[i], a, b, c) >= quad(nums[j], a, b, c) ? quad(nums[j--],a,b,c): quad(nums[i++],a,b,c);
            }
        }
        return sorted;
        
        
    }
    private int quad(int x, int a, int b, int c){
        return a*x*x + b*x + c;
    }
}
