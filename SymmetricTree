/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
//Recursive Solution
// class Solution {
//     public boolean isSymmetric(TreeNode root) {
//       return check(root,root);
//     }
//     public boolean check (TreeNode t, TreeNode s){
//         if(t==null && s==null) return true;
//         if(t==null || s==null) return false;
//         return (t.val==s.val && check(t.left, s.right) && check(t.right,s.left));
//     }
// }
//Iterative Solution
class Solution {
    public boolean isSymmetric(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        q.add(root);
        while(!q.isEmpty()){
            TreeNode t1 = q.poll();
            TreeNode t2 = q.poll();
            if(t1== null && t2==null)continue;
            if(t1==null || t2==null) return false;
            if(t1.val != t2.val) return false;
            q.add(t1.left);
            q.add(t2.right);
            q.add(t1.right);
            q.add(t2.left);
        }
        return true;
    }
}
